<?

	$postID = $_GET['post'];


// Custom Post Type Registration (Support)
add_action( 'init', 'create_support_posttype' );
function create_support_posttype() {
$labels = array(
    'name' => _x('Support', 'post type general name'),
    'singular_name' => _x('Question', 'post type singular name'),
    'add_new' => __('Add New Question', 'Term'),
	'add_new_item' => __('Add New Question'),
	'edit_item' => __('Edit Term'),
    'view_item' => __('View Term'),
    'search_items' => __('Search Support Index'),
    'not_found' =>  __('No matching Term found'),
    'not_found_in_trash' => __('No Term found in Trash'),
    'parent_item_colon' => '',
);
$args = array(
    'label' => __('Support'),
    'labels' => $labels,
    'public' => true,
    'can_export' => true,
    'show_ui' => true,
    '_builtin' => false,
    '_edit_link' => 'post.php?post=%d', // ?
    'capability_type' => 'post',
//    'menu_icon' => get_bloginfo('stylesheet_directory').'/images/event_16.png',
    'hierarchical' => false,
    'rewrite' => array( "slug" => "glossary" ),
    'supports'=> array('title','editor','excerpt','author','revisions','custom-fields'),
    'show_in_nav_menus' => true,
	'taxonomies' => array('category'),
    'register_meta_box_cb' => 'mb_support_add_metaboxes'
	
);
register_post_type('support', $args);

add_action('save_post', 'mb_support_save_meta', 1, 1); // save the custom fields


}


	function generateSupportTaxBox($name, $order, $rows) {
		
	
	global $postID;
	
	$value = get_post_meta($postID, $name.'_'.$order, true);

	echo '<select name="'.$name.'_'.$order.'" id="'.$name.'_'.$order.'" class="support '.$name.'">';


	if ($value != "") {

		echo "<option value='".$value."'>".get_the_category_by_ID($value)."</option>";
		echo "<option disabled='disabled'>-----</option>";

		
	} else {

		echo '<OPTION SELECTED VALUE="">item #'.$order.'...</OPTION>';		
		
	}



	foreach ($rows as $item) 
	{

		echo "<option value='".$item->term_id."'>".$item->name."</option>";

	}

	echo '</select>';

		
		
	}




function mb_support_add_metaboxes()
{
	
	add_meta_box('mb_support_categories', 'Support', 'mb_support_categories', 'support', 'normal', 'default');	
	add_meta_box('mb_support_healthconcerns', 'Health Concerns', 'mb_support_healthconcerns', 'support', 'normal', 'default');

//    wp_enqueue_script('global-products', get_stylesheet_directory_uri().'/js/global_products.js', array('jquery'), '', TRUE);
//    wp_enqueue_script('global-products-tinysort', get_stylesheet_directory_uri().'/js/jquery.tinysort.min.js', array('jquery'), '', TRUE);
    wp_enqueue_script('jquery-ui', 'http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.23/jquery-ui.min.js', array('jquery'), '', TRUE);

    wp_enqueue_style('jquery-ui-css', 'http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/cupertino/jquery-ui.css');
//    wp_enqueue_style('global-products-css', get_stylesheet_directory_uri().'/css/products.css');


}



function mb_support_categories($post)
{

	$rows = getProdTax(104);
	generateSupportTaxBox("categories", 1, $rows);
	generateSupportTaxBox("categories", 2, $rows);
	generateSupportTaxBox("categories", 3, $rows);
	
}


function mb_support_healthconcerns($post)
{


	$rows = getProdTax(3);
	generateSupportTaxBox("healthconcerns", 1, $rows);
	generateSupportTaxBox("healthconcerns", 2, $rows);
	generateSupportTaxBox("healthconcerns", 3, $rows);

	
}


	
// Save the Metabox Data
function mb_support_save_meta($post_id)
{


if ($_POST['post_type'] == "support") {	
	

	if (wp_is_post_revision($post_id)) {

		$revisionPostID = wp_is_post_revision($post_id);

	} else if(!wp_is_post_revision($post_id)) {
		
		$revisionPostID = $post_id;	
		
	};

    if (!current_user_can('edit_post', $revisionPostID))
        return false;
	
	update_post_meta($revisionPostID, 'categories_1', $_POST['categories_1']);	
	update_post_meta($revisionPostID, 'categories_2', $_POST['categories_2']);
	update_post_meta($revisionPostID, 'categories_3', $_POST['categories_3']);
	update_post_meta($revisionPostID, 'healthconcerns_1', $_POST['healthconcerns_1']);	
	update_post_meta($revisionPostID, 'healthconcerns_2', $_POST['healthconcerns_2']);
	update_post_meta($revisionPostID, 'healthconcerns_3', $_POST['healthconcerns_3']);


	$priorityCatArray = array();

	array_push($priorityCatArray, intval($_POST['healthconcerns_1']));
	array_push($priorityCatArray, intval($_POST['healthconcerns_2']));
	array_push($priorityCatArray, intval($_POST['healthconcerns_3']));
	array_push($priorityCatArray, intval($_POST['categories_1']));
	array_push($priorityCatArray, intval($_POST['categories_2']));
	array_push($priorityCatArray, intval($_POST['categories_3']));


	$priorityCatArray = array_filter($priorityCatArray);
	wp_set_object_terms($revisionPostID, $priorityCatArray, 'category');

	

}


}

?>