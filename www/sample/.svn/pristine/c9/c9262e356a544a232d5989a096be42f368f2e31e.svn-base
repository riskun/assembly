<?php
/*
 Template Name: Products
 */
?>
<?php get_header(); ?>
<?php query_posts('post_type=sn-products'); ?>

<section class="content2 content-products content-products-results clearfix">
  <aside>
  	<div class="categoryCircle" style="background-color:#f79d4d">
		<div class="categoryCircleCenter">
			<div class="categoryCircleTitle">
				Women
			</div>
			<div class="categoryCircleNumber">
				200
			</div>			
		</div>
  	</div>
    <h1>Narrow your results by using our helpful filters. </h1>
    <div class="hl2"></div>
    <div class="search">
      <input type="text" placeholder="Search Within" id="search">
    </div>
    <div class="hl2"></div>
    <div class="fitlers">
	<!--      <fieldset id="featuredNewest"  style="opacity:0.25;" disabled="disabled">
	        <label for="featuredCheckbox">
	          <input type="checkbox" id="featuredCheckbox" value="featuredCheckbox">
	          <span>Featured Products</span></label>
	        <div class="hl2"></div>
	        <label for="newestCheckbox">
	          <input type="checkbox" id="newestCheckbox" value="newestCheckbox">
	          <span>Newest Products</span></label>
	        <div class="hl2"></div>
	      </fieldset> -->
      <ul id="nav_left">
        <li id="menuType" class="navHighlight"> <a href="#">Product Categories</a> </li>
        <li id="menuHealth"> <a href="#">Health Concerns</a> </li>
      </ul>
    </div>
    <div class="skipModule clearfix">
    </div>
  </aside>
  
 
<?

$args_array = array('type' => 'post', 'orderby' => 'name', 'order' => 'ASC');
$totalCats = get_terms('category', $args_array);

//	var_dump($totalCats);
?> 
  
  <section class="list-products-wrap list-products-bg" id="list-products-health">
    	<div class="products-list-bg-shadow"></div>
  
    <?

	function obj_array_unique($array, $keep_key_assoc = false) {
		$duplicate_keys = array();
		$tmp = array();

		foreach ($array as $key => $val) {
			// convert objects to arrays, in_array() does not support objects
			if (is_object($val))
				$val = (array)$val;

			if (!in_array($val, $tmp))
				$tmp[] = $val;
			else
				$duplicate_keys[] = $key;
		}

		foreach ($duplicate_keys as $key)
			unset($array[$key]);

		return $keep_key_assoc ? $array : array_values($array);
	}

	function objcmp($a, $b) {
		return strcmp($a -> name, $b -> name);
	}

	$args = array('post_type' => 'sn-support', 'posts_per_page' => "7", 'order' => 'DESC', 'orderby' => 'meta_value_num', 'meta_key' => 'visitors');

	$articleQuery = new WP_Query($args);

	$healthConcerns = array();

	foreach ($articleQuery->posts as $post) {

		$cats = get_the_category($post -> ID);
		//var_dump($cats);
		foreach ($cats as $cat) {

			if ($cat -> parent == 367) {

				array_push($healthConcerns, $cat);

			}

		}

	};

function ounique($obj) {


	static $idList = array();
	if(in_array($obj->term_id,$idList)) {
		return false;
	}
	$idList []= $obj->term_id;
	return true;


}

//	$healthConcerns = array_unique($healthConcerns);
	
	$healthConcerns = array_filter($healthConcerns,'ounique');
	
	usort($healthConcerns, objcmp);

//	var_dump($healthConcerns);
?>    
    <fieldset id="health">
      <ul>
        <?

/*				$args_health = array(
					'type'                     => 'post',
					'orderby'                  => 'name',
					'order'                    => 'ASC');
				$list_health = get_terms('category', $args_health);
				
				var_dump($list_health);
	*/			

//				var_dump($list_health);

				foreach ($healthConcerns as $item) {	
				
					if ($item->parent == "367") { // IF HEALTH
				
					$description = $item->description;
					$description_array = explode("\r\n\r\n", $description);
				
				?>
        <li> <span>
          <input type="checkbox" id="regularCheckbox<?= $item -> term_id ?>"  value="<?= $item -> term_id ?>" count="<?= $item -> count ?>" />
          <label for="regularCheckbox<?= $item -> term_id ?>" rel="<?= ($item -> name) ?>" col="000000" style="display:inline-block; margin-bottom:0;">
            <?= ucwords($item -> name) ?><!-- (<?= $item -> count ?>) -->
          </label>
          </span> </li>
        <?

		}

		}
				?>
      </ul>
    </fieldset>
  </section>
  <section class="list-products-wrap list-products-bg" id="list-products-type">
  	<div class="products-list-bg-shadow"></div>
    <fieldset id="type">
      <ul>
        <?
/*				
				$args = array(
					'type'                     => 'post',
					'parent'                   => '366',
					'orderby'                  => 'name',
					'order'                    => 'ASC');
				$list_products = get_categories($args);
*/							
				foreach ($totalCats as $item) {	

					if ($item->parent == "366") { // IF HEALTH
				
					$description = $item->description;
					$description_array = explode("\r\n\r\n", $description);
				
				?>
        <li> <span>
          <input type="checkbox" id="regularCheckbox<?= $item -> term_id ?>"  value="<?= $item -> term_id ?>" count="<?= $item -> count ?>" />
          <label for="regularCheckbox<?= $item -> term_id ?>" rel="<?= ($item -> name) ?>" col="<?= $description_array[0] ?>" style="display:inline-block; margin-bottom:0;">
            <?= ucwords($item -> name) ?><!-- (<?= $item -> count ?>)-->
          </label>
          </span> </li>
        <?

		}

		}
				?>
      </ul>
    </fieldset>
  </section>
  <article>
    <div id="list_header"> 
		<div class="productsUtilityNav clearfix">
			<div class="productsUtilityNav-items productsUtilityNav-item1">
				Showing items:&nbsp;&nbsp;<strong id="currentOffset">X-Y</strong> of <strong id="totalCount">##</strong>
			</div>
			<div class="productsUtilityNav-items productsUtilityNav-item2">
	    	<label for="sort">Sort by:&nbsp;&nbsp;</label>
	        <select id="sort">
	          <option value="temporary">Popularity*</option>
	          <option value="popularity">Popularity</option>
	          <option value="date">Newest</option>
	          <option value="alpha">Alphabetical</option>
	          <option value="reverse_alpha">Reverse alpha</option>

	        </select>
	       	</div>
			<div class="productsUtilityNav-items productsUtilityNav-item3">	           
	    	<label for="ppp">Items per page:&nbsp;&nbsp;</label>
	        <select id="ppp">
	          <option value="9">9</option>
	          <option value="15">15</option>
	          <option value="30">30</option>
	          <option value="-1">ALL</option>
	        </select>
	       	</div>
			<div class="productsUtilityNav-items productsUtilityNav-item4">	           
			<fieldset id="pager_container" class="">
	            <label for="pager">Page:&nbsp;&nbsp;</label>
	            <input id="pager" type="text" min="1" max="1" step="1" value="1"> of <span id="totalPageCount">##</span>
			</fieldset>            
			</div>
		</div>
		<hr>    
    </div>
    <div class="listProducts clearfix"> </div>
   	<hr>  
    <div id="list_header"> 
		<div class="productsUtilityNav clearfix">
			<div class="productsUtilityNav-items productsUtilityNav-item1">
				Showing items:&nbsp;&nbsp;<strong id="currentOffset2">X-Y</strong> of <strong id="totalCount2">##</strong>
			</div>
			<div class="productsUtilityNav-items productsUtilityNav-item2">
	    	<label for="sort2">Sort by:&nbsp;&nbsp;</label>
	        <select id="sort2">
	          <option value="temporary">Popularity*</option>	
              <option value="popularity">Popularity</option>
	          <option value="date">Newest</option>
	          <option value="alpha">Alphabetical</option>
	          <option value="reverse_alpha">Reverse alpha</option>
	        </select>
	       	</div>
			<div class="productsUtilityNav-items productsUtilityNav-item3">	           
	    	<label for="ppp2">Items per page:&nbsp;&nbsp;</label>
	        <select id="ppp2">
	          <option value="9">9</option>
	          <option value="15">15</option>
	          <option value="30">30</option>
	          <option value="-1">ALL</option>
	        </select>
	       	</div>
			<div class="productsUtilityNav-items productsUtilityNav-item4">	           
			<fieldset id="pager_container2" class="">
	            <label for="pager2">Page:&nbsp;&nbsp;</label>
	            <input id="pager2" type="text" min="1" max="1" step="1" value="1"> of <span id="totalPageCount2">##</span>
			</fieldset>            
			</div>
		</div>
    </div>    
  </article>
</section>
<script type="text/javascript">



		jQuery(document).ready(function () {


	var hash = window.location.hash.substring(1);
	
	$("#regularCheckbox"+hash).attr("checked","checked");


    loadProducts = function () {

//		alert("Load Product activated");

        var categories = [];
        var categories_name = [];
        var categories_color = [];

        jQuery('fieldset#health input:checkbox:checked').each(function () {
            categories.push(parseInt(jQuery(this).val()));
            categories_name.push(jQuery(this).next("label").attr("rel"));
            categories_color.push(jQuery(this).next("label").attr("col"));


        });

        jQuery('fieldset#type input:checkbox:checked').each(function () {
            categories.push(parseInt(jQuery(this).val()));
            categories_name.push(jQuery(this).next("label").attr("rel"));
            categories_color.push(jQuery(this).next("label").attr("col"));

        });

		console.log(categories_name);

        jQuery("#currentType p").html("");


			if (categories.length == 0) {
	
	            jQuery(".categoryCircleTitle").html("displaying all");
//				jQuery(".categoryCircle").css("background-color", "#f79d4d");		
					jQuery( ".categoryCircle" ).animate({
						backgroundColor: "#f79d4d",
					}, 500 );

	
			} else if (categories.length == 1) {
	
	            jQuery(".categoryCircleTitle").html(categories_name[0]);
				
				if (categories_color[0] == "") {
					
//					jQuery(".categoryCircle").css("background-color", "#f79d4d");
					jQuery( ".categoryCircle" ).animate({
						backgroundColor: "#f79d4d",
					}, 500 );
						
					
				} else {
					
					jQuery( ".categoryCircle" ).animate({
						backgroundColor: "#"+categories_color[0],
					}, 500 );
					
				}
				
				
	
			} else if (categories.length > 1) {
	
				jQuery(".categoryCircleTitle").html("multiple selected<br/>");			
//				jQuery(".categoryCircle").css("background-color", "#999");		
				jQuery( ".categoryCircle" ).animate({
				backgroundColor: "#999",
			}, 500 );
	
			}


        console.log(categories);

        var page = jQuery("#pager").val();
        var sortby = jQuery("#sort").val();
        var ppp = jQuery("#ppp").val();
        var search_q = jQuery("#search").val();

        //alert(search_q);

        jQuery("#ajax").html("<div style='text-align:center'>LOADING</div>");


        jQuery.ajax({
            url: "<?= get_stylesheet_directory_uri() . '/assets/ajax/' ?>
				products_page_ajax.php",
				type: "POST",
				cache: true,
				data: {

				"sort": sortby,
				"ppp": ppp,
				"page": page,
				//			"featurednewest": "4",
				"categories": categories,
				'search_q': search_q

				},
				dataType: "html",
				success: function (data, status, xhr) {

				jQuery(".listProducts").hide();
				jQuery(".listProducts").html(data);
				jQuery(".listProducts").fadeIn("slow");

				var postCount = jQuery(data).filter("#count").html()
				

				var	startVal = jQuery(".categoryCircleNumber").text(),
			        currentVal,
			        endVal = postCount

				this.disabled = true;
				currentVal = startVal;
				console.log(parseInt(currentVal));
//				alert(endVal);

				var intervalSpeed = 0.5;


				if (Math.abs(parseInt(currentVal) - parseInt(endVal)) > 200) {
				
						jQuery(".categoryCircleNumber").text(endVal);
					
				} else {

						
					var i = setInterval(function ()
					{
						
	
	
	
						if (parseInt(currentVal) == parseInt(endVal))
						{
	//						alert("Done");
							clearInterval(i);
							intervalSpeed = 0.5;
						
	//						jQuery(".categoryCircleNumber").animate({fontSize: fontSize});
						} else if (parseInt(currentVal) > parseInt(endVal))
						{
							currentVal--;
							intervalSpeed = intervalSpeed * 0.6;							
							jQuery(".categoryCircleNumber").text(currentVal);
						}
						else
						{
							currentVal++;
							intervalSpeed = intervalSpeed * 0.6;
							jQuery(".categoryCircleNumber").text(currentVal);						
						}
						
						console.log(intervalSpeed);
						
						
						
						
					}, intervalSpeed);
				
				
				}
				
//				jQuery(".categoryCircleNumber").html(postCount);

				if (ppp == "-1") {

				var totalPages = 1;

				} else {

				var totalPages = Math.ceil(postCount / ppp);

				};

				jQuery("#totalCount, #totalCount2").html(postCount);

				if (postCount == 0 || totalPages == 1) {

				jQuery("#pager_container, #pager_container2").attr("disabled", "disabled");
				jQuery("#pager_container, #pager_container2").addClass("formDisabled");

				} else {

				jQuery("#pager_container, #pager_container2").removeAttr("disabled");
				jQuery("#pager_container, #pager_container2").removeClass("formDisabled");

				}

				jQuery("#totalPageCount, #totalPageCount2").html(totalPages);
				jQuery("#pager, #pager2").attr("max", totalPages);

				var offset = (page - 1) * ppp + 1;
				var offsetMax = offset + parseInt(ppp) - 1;

				if (offsetMax > postCount) {

				offsetMax = postCount;

				} else if (offsetMax == "-1") {

				offsetMax = postCount;

				}

				jQuery("#currentOffset, #currentOffset2").html(offset + "-" + offsetMax);

				//alert();

				},
				complete: function (xhr, status) {

				//			alert(status)

				jQuery(".item").hover(function () {

				var catArray = jQuery(this).attr("cats").split(",");

				jQuery.each(catArray, function (key, value) {

				jQuery("input[value='" + value + "']").next("label").parent('span').addClass("cathover");
				

				});

				jQuery(this).fadeTo("fast", 0.5);

				}, function () {

				var catArray = jQuery(this).attr("cats").split(",");

				jQuery.each(catArray, function (key, value) {

				jQuery("input[value='" + value + "']").next("label").parent('span').removeClass("cathover");

				});

				jQuery(this).fadeTo("fast", 1);

				});

				}

				})

				};

				loadProducts();

				//WHEN HOVERING TO SWITCH TWO SECTIONS: PRODUCT TYPE AND HEALTH CONCERNS
				/*    jQuery("#nav_left li").hover(function () {

				var navID = jQuery(this).attr("id");

				switch (navID) {

				case "menuHealth":
				jQuery("#health").siblings("fieldset").hide();
				jQuery("#health").show();
				jQuery(this).addClass("navHighlight");
				jQuery(this).siblings("li").removeClass("navHighlight");

				break;
				case "menuType":
				jQuery("#type").show();
				jQuery("#type").siblings("fieldset").hide();
				jQuery(this).addClass("navHighlight");
				jQuery(this).siblings("li").removeClass("navHighlight");
				break;

				};

				}); */

				jQuery("#menuHealth").click(function(){

				jQuery("#list-products-health").show();
				jQuery("#list-products-type").hide();

				});

				jQuery("#menuType").click(function(){

				jQuery("#list-products-health").hide();
				jQuery("#list-products-type").show();

				});

				jQuery("#menuType").click();

				//WHEN SORT BY CHANGES
				jQuery('#sort').change(function () {
				console.log('Handler for SORT BY change called.');
				jQuery('#pager, #pager2').val(1);
				jQuery("#sort2>option[value="+jQuery(this).val()+"]").attr("selected", true);			
				loadProducts();
				});
				

				jQuery('#sort2').change(function () {
	
					jQuery("#sort>option[value="+jQuery(this).val()+"]").attr("selected", true);
					jQuery('#sort').change();
					
				})


	
				jQuery('#pager2').change(function () {
	
					jQuery("#pager").val(jQuery(this).val());
					jQuery('#pager').change();
					
				})

				jQuery('#ppp2').change(function () {
	
					jQuery("#ppp>option[value="+jQuery(this).val()+"]").attr("selected", true);
					jQuery('#ppp').change();
					
				})

				

				//WHEN SWITCHING POSTS PER PAGE
				jQuery('#ppp').change(function () {
				console.log('Handler for ITEMS PER PAGE change called.');
				jQuery('#pager, #pager2').val(1);
				jQuery("#ppp2>option[value="+jQuery(this).val()+"]").attr("selected", true);			
				loadProducts();
				});
				

				//WHEN SWITCHING PAGES
				jQuery('#pager').change(function () {
				console.log('Handler for PAGE change called.');
				jQuery("#pager2").val(jQuery(this).val());
				loadProducts();
				});

				//WHEN CHOOSING PRODUCT TYPE(S)
				jQuery('#type').change(function () {

				if (jQuery("#search").val() == "") {

				console.log("Search empty");

				};

				console.log('Handler for TYPE change called.');
				jQuery('#pager, #pager2').val(1);
				loadProducts();
				});

				//WHEN CHOOSING HEALTH CONCERN(S)
				jQuery('#health').change(function () {

				if (jQuery("#search").val() == "") {

				console.log("Search empty");

				};

				console.log('Handler for HEALTH change called.');
				jQuery('#pager, #pager2').val(1);
				loadProducts();

				});

				//WHEN CHOOSING PRODUCT TYPE(S) OR HEALTH CONCERN(S)
				jQuery('fieldset#health input, fieldset#type input').change(function () {

				if (jQuery("#search").val() == "") {

				jQuery('fieldset input').not(this).each(function (idx, el) {
				//                el.checked = false;
				});

				}

				});

				jQuery('#featuredNewest').change(function () {
				console.log('Handler for FEATURE / NEWEST change called.');
				jQuery('#pager, #pager2').val(1);
				loadProducts();
				});

				jQuery('#search').live('change', function () {

				/*
				console.log('Handler for SEARCH change called.');

				if (jQuery(this).val() == "") {

				console.log('Handler for SEARCH clear called.');

				jQuery('input').removeAttr("checked");

				jQuery('#pager').val(1);
				loadProducts();
				};
				*/
	
					if (jQuery(this).val().length > 5) {
					
//					loadProducts();
	
					}
				

				});

				
				var typewatch = (function(){
				  var timer = 0;
				  return function(callback, ms){
					clearTimeout (timer);
					timer = setTimeout(callback, ms);
				  }  
				})();


				$("#search").keyup(function () {
				  typewatch(function () {

					if (jQuery("#search").val() == "") {
	
	/*				jQuery('input').removeAttr("checked"); */
					console.log('Handler for SEARCH clear called.');
					jQuery('#pager').val(1);
					loadProducts();
	
					} else if (jQuery("#search").val().length >= 5) {
	
	/*				jQuery('input').removeAttr("checked"); */
					console.log('Handler for SEARCH change (more than 5 characters) called.');
					jQuery('#pager').val(1);
					loadProducts();
	
					}





				  }, 1000);
				});
				
				
				
				jQuery('#search').each(function () {
				// Save current value of element
				jQuery(this).data('oldVal', jQuery(this).val());

				// Look for changes in the value
				jQuery(this).bind("propertychange keyup input paste", function (event) {
				// If value has changed...
				if (jQuery(this).data('oldVal') != jQuery(this).val()) {
				// Updated stored value
				jQuery(this).data('oldVal', jQuery(this).val());

				// Do action
				console.log(jQuery(this).val());

				if (jQuery(this).val() == "") {

/*				jQuery('input').removeAttr("checked"); 
				console.log('Handler for SEARCH clear called.');
				jQuery('#pager').val(1);
				loadProducts();*/

				} else if (jQuery(this).val().length >= 5) {

/*				jQuery('input').removeAttr("checked"); 
				console.log('Handler for SEARCH change (more than 5 characters) called.');
				jQuery('#pager').val(1);
				loadProducts();*/

				}




				}
				});
				});

				jQuery('#search').keypress(function (e) {
				if (e.which == 13) {
				console.log('Handler for SEARCH enter key called.');
				jQuery('#pager').val(1);
				loadProducts();
				}
				});

				jQuery('#search_btn').click(function () {
				console.log('Handler for SEARCH click called.');
				jQuery('#pager').val(1);
				loadProducts();
				});

				jQuery('#clear_btn').click(function () {

				jQuery('#search').val("");
				jQuery('fieldset input').not(this).each(function (idx, el) {
				el.checked = false;
				});

				console.log('Handler for CLEAR click called.');
				jQuery('#pager').val(1);
				loadProducts();
				});

				});

				jQuery(window).load(function(){

				});

</script>
<?php get_footer(); ?>
